/* =============================================================================================================
// EN: Notifies the compiler that there should be a character at the end of each expression ;
// RU: Сообщает компилятору о том, что в конце каждого выражения должен стоять символ ;
// =============================================================================================================*/

#pragma semicolon 1
/* =============================================================================================================
// EN: Notifies the compiler that the plugin syntax is exceptionally new
// RU: Сообщает компилятору о том, что синтаксис плагина исключительно новый
// =============================================================================================================*/

#pragma newdecls required

public Plugin myinfo = 
{
	name = "Bomb Info", 
	author = "babka68", 
	description = "События игрок: поднял, сбросил, начал/прекратил обезвреживать бомбу,установил бомбу", 
	version = "1.0", 
	url = "https://vk.com/zakazserver68"
};

public void OnPluginStart()
{
	/* =============================================================================================================
	// EN: Note: When the bomb has been planted
	// RU: Примечание: Когда бомба была заложена
	// =============================================================================================================*/
	HookEvent("bomb_planted", Event_BombPlanted);
	
	/* =============================================================================================================
	// EN: Note: When the bomb is dropped by a client
	// RU: Примечание: Когда бомба сбрасывается клиентом
	// =============================================================================================================*/
	HookEvent("bomb_dropped", Event_BombDropped);
	
	/* =============================================================================================================
	// EN: Note: When the bomb is picked up by a client
	// RU: Примечание: Когда бомба подбирается клиентом
	// =============================================================================================================*/
	HookEvent("bomb_pickup", Event_BombPickup);
	
	/* =============================================================================================================
	// EN: Note: When the bomb is started to be defused
	// RU: Примечание: Когда бомба начнет обезвреживаться
  // =============================================================================================================*/
	HookEvent("bomb_begindefuse", Event_BombBeginDefuse);
	
	/* =============================================================================================================
	// EN: Note: When the bomb defusal is stopped
	// RU: Примечание: Когда обезвреживание бомбы прекращено
	// =============================================================================================================*/
	HookEvent("bomb_abortdefuse", Event_BombAbortDefuse);
	
	/* =============================================================================================================
	// EN: Loads a translation file for the plugin calling this native. If no extension is specified, .txt is assumed.
	// RU: Загружает файл перевода для плагина, вызывающего этот native. Если расширение не указано, предполагается .txt.
	// =============================================================================================================*/
	LoadTranslations("bomb_info_hint.phrases");
}

/* =============================================================================================================
// EN: Note: When the bomb has been planted
// RU: События бомбы: Игрок заложил бомбу
// =============================================================================================================*/

public void Event_BombPlanted(Event event, const char[] name, bool dontBroadcast)
{
	/* =============================================================================================================
	// EN: Create a local static integer variable and call it client.
	// RU: Создаем локальную статическую целочисленную переменну и назовем её client.
	// =============================================================================================================*/
	static int client;
	
	/* =============================================================================================================
	// EN: GetClientOfUserId - Translates an userid index to the real player index.
	// RU: GetClientOfUserId - Преобразует индекс идентификатора пользователя в индекс реального игрока.
	// =============================================================================================================*/
	client = GetClientOfUserId(event.GetInt("userid"));
	
	/* =============================================================================================================
	// EN: if (client) > 0 - Check if there is a player on the server (that is, exclude the case when the index is 0)
	// EN: IsClientInGame(client) - Check if there is a specific player on the server under the index in the range from 1 to MaxClients.
	// RU: if (client) > 0 - Проверяем есть ли игрок на сервере (то есть исключаете случай, когда индекс равен 0)
	// RU: IsClientInGame(client) - Проверяем, есть ли на сервере конкретный игрок под индексом в интервале от 1 до MaxClients.
	// =============================================================================================================*/
	if ((client) > 0 && IsClientInGame(client))
	{
		PrintHintTextToAll("%t", "bombplanted", client);
	}
}

/* =============================================================================================================
// EN: Bomb Events: The player dropped a bomb
// RU: События бомбы: Игрок сбросил бомбу
// =============================================================================================================*/
public void Event_BombDropped(Event event, const char[] name, bool dontBroadcast)
{
	/* =============================================================================================================
	// EN: Create a local static integer variable and call it client.
	// RU: Создаем локальную статическую целочисленную переменну и назовем её client.
	// =============================================================================================================*/
	static int client;
	
	/* =============================================================================================================
	// EN: GetClientOfUserId - Translates an userid index to the real player index.
	// RU: GetClientOfUserId - Преобразует индекс идентификатора пользователя в индекс реального игрока.
	// =============================================================================================================*/
	client = GetClientOfUserId(event.GetInt("userid"));
	
	/* =============================================================================================================
	// EN: if (client) > 0 - Check if there is a player on the server (that is, exclude the case when the index is 0)
	// EN: IsClientInGame(client) - Check if there is a specific player on the server under the index in the range from 1 to MaxClients.
	// RU: if (client) > 0 - Проверяем есть ли игрок на сервере (то есть исключаете случай, когда индекс равен 0)
	// RU: IsClientInGame(client) - Проверяем, есть ли на сервере конкретный игрок под индексом в интервале от 1 до MaxClients.
	// =============================================================================================================*/
	if ((client) > 0 && IsClientInGame(client))
	{
		PrintHintTextToAll("%t", "bombdropped", client);
	}
}

/* =============================================================================================================
// EN: Bomb Events: The player raised a bomb
// RU: События бомбы: Игрок поднял бомбу
// =============================================================================================================*/
public void Event_BombPickup(Event event, const char[] name, bool dontBroadcast)
{
	static int client;
	client = GetClientOfUserId(event.GetInt("userid"));
	if (client > 0 && IsClientInGame(client))
	{
		PrintHintTextToAll("%t", "bombpickup", client);
	}
}

/* =============================================================================================================
// EN: Bomb events: The player started defusing the bomb
// RU: События бомбы: Игрок начал обезвреживания бомбы
// =============================================================================================================*/
public void Event_BombBeginDefuse(Event event, const char[] name, bool dontBroadcast)
{
	/* =============================================================================================================
	// EN: Create a local static integer variable and call it client.
	// RU: Создаем локальную статическую целочисленную переменну и назовем её client.
	// =============================================================================================================*/
	static int client;
	
	/* =============================================================================================================
	// EN: GetClientOfUserId - Translates an userid index to the real player index.
	// RU: GetClientOfUserId - Преобразует индекс идентификатора пользователя в индекс реального игрока.
	// =============================================================================================================*/
	client = GetClientOfUserId(event.GetInt("userid"));
	
	/* =============================================================================================================
	// EN: if (client) > 0 - Check if there is a player on the server (that is, exclude the case when the index is 0)
	// EN: IsClientInGame(client) - Check if there is a specific player on the server under the index in the range from 1 to MaxClients.
	// RU: if (client) > 0 - Проверяем есть ли игрок на сервере (то есть исключаете случай, когда индекс равен 0)
	// RU: IsClientInGame(client) - Проверяем, есть ли на сервере конкретный игрок под индексом в интервале от 1 до MaxClients.
	// =============================================================================================================*/
	if ((client) > 0 && IsClientInGame(client))
	{
		PrintHintTextToAll("%t", "bombbegindefuse", client);
	}
}

/* =============================================================================================================
// EN: Bomb Events: The player has stopped defusing the bomb
// RU: События бомбы: Игрок прекратил обезвреживать бомбу
// =============================================================================================================*/
public void Event_BombAbortDefuse(Event event, const char[] name, bool dontBroadcast)
{
	/* =============================================================================================================
	// EN: Create a local static integer variable and call it client.
	// RU: Создаем локальную статическую целочисленную переменну и назовем её client.
	// =============================================================================================================*/
	static int client;
	
	/* =============================================================================================================
	// EN: GetClientOfUserId - Translates an userid index to the real player index.
	// RU: GetClientOfUserId - Преобразует индекс идентификатора пользователя в индекс реального игрока.
	// =============================================================================================================*/
	client = GetClientOfUserId(event.GetInt("userid"));
	
	/* =============================================================================================================
	// EN: if (client) > 0 - Check if there is a player on the server (that is, exclude the case when the index is 0)
	// EN: IsClientInGame(client) - Check if there is a specific player on the server under the index in the range from 1 to MaxClients.
	// RU: if (client) > 0 - Проверяем есть ли игрок на сервере (то есть исключаете случай, когда индекс равен 0)
	// RU: IsClientInGame(client) - Проверяем, есть ли на сервере конкретный игрок под индексом в интервале от 1 до MaxClients.
	// =============================================================================================================*/
	if ((client) > 0 && IsClientInGame(client))
	{
		PrintHintTextToAll("%t", "bombabortdefuse", client);
	}
}
